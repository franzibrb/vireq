
@using NonFactors.Mvc.Grid;
@model WebAppl.Models.LieferantenFile

<h3>Ihre Lieferanten</h3>
<div id="LieferantenFile">
    @if (Model == null)
    {
        @:Sie haben noch keine Lieferanten importiert.
    }
    else
    {
        @:Sie haben Ihre Lieferanten zuletzt am @Model.LieferantenUpdatedAt durch das Hochladen der Datei @Model.LieferantenFileName aktualisiert.
    }
</div>
<div id="UploadLieferanten">
    <form id="UploadLieferantenForm" enctype="multipart/form-data" action="@Url.Action("UploadLieferantenFile", "File")" method="POST">
        <div class="form-group">
            <input type="file" id="dataFile" name="file" />
        </div>

        <div class="form-group">
            <input type="submit" value="Lieferanten hochladen" class="btn btn-default" />
        </div>

        <div id="LieferantenUploadResult">

        </div>
    </form>


</div>


<div id="LieferantenGrid">
    @if (Model != null)
    {
        <div class="form-group">
            <input type="button" id="ExportLieferantenButton" class="btn btn-default" value="Lieferanten exportieren" onclick="location.href='@Url.Action("DownloadLieferantenFile","File")'" />
        </div>
    }
    @Html.AjaxGrid(Url.Action("IndexGrid"), new { id = "lieferanten-grid" })



    <div class="form-group">
        <input type="button" id="DeleteLieferantenButton" class="btn btn-default" value="Lieferanten löschen" />
    </div>
    <div id="LieferantenDeleteResult">
    </div>
    <div id="UploadPalette">
        <form id="UploadPaletteForm" enctype="multipart/form-data" action="@Url.Action("UploadPalette", "File")" method="POST">
            <div class="form-group">
                <input type="file" id="dataFile" name="file" />
            </div>

            <div class="form-group">
                <input type="submit" value="Neue Palette hochladen" class="btn btn-default" />
            </div>

            <div id="PalettenUploadResult">

            </div>
        </form>


    </div>
</div>
@Html.ValidationMessage("lieferantenabfrage", new { @class = "text-danger" })

<!-- Modal zum Bearbeiten-->
<div id="LieferantenModelDialog" class="modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='LieferantenModelDialogContent'></div>

        </div>
    </div>
</div>
<script type="text/javascript">
    // Lieferanten bearbeiten
    $('#LieferantenGrid').on(
        'click', '.lieferanten-detail-button', function (e) {
            $.ajax({
                type: "GET",
                url: this.href,
                success: function (data) {
                    $('#LieferantenModelDialogContent').html(data);
                    $('#LieferantenModelDialog').modal('show');

                },
                error: function () {
                    alert("Dynamic content load failed.");
                }
            });

            return false; // Redirect verhindern
        });



    // Zeigt die Paletten des gewählten Lieferanten an
    $('#LieferantenGrid').on('click', '.zeige-paletten-button', function (e) {
        $.ajax({
            type: "GET",
            url: this.href,
            success: function (data) {
                $('#Paletten').html(data);
                //Leeren der Artikel
                // TODO nur, wenn ein anderer Artikel ausgewählt wurde
                $('#Artikel').empty();
            },
            error: function (xhr, error, status) {
                $('#Paletten').html(xhr.statusText);
            }
        });

        return false; // Redirect verhindern
    });

    // Lieferantendatei hochladen
    $('#UploadLieferantenForm').submit(function (e) {
        e.preventDefault(); // stop the standard form submission

        $.ajax({
            url: this.action,
            type: this.method,
            data: new FormData(this),
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                // refresh der Lieferanten
                new MvcGrid(document.querySelector('#lieferanten-grid')).reload();

            },
            error: function (xhr, error, status) {
                // Danke IIS fürs Verschlucken meines Statustextes; sollte produktiv die Meldung aus der Action liefern
                $('#LieferantenUploadResult').html(xhr.statusText);
            }
        });
    });

    // Palette hochladen
    $('#UploadPaletteForm').submit(function (e) {
        e.preventDefault(); // stop the standard form submission
        $.ajax({
            url: this.action,
            type: this.method,
            data: new FormData(this),
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                // refresh der Lieferanten
                new MvcGrid(document.querySelector('#lieferanten-grid')).reload();

            },
            error: function (xhr, error, status) {
                // Danke IIS fürs Verschlucken meines Statustextes; sollte produktiv die Meldung aus der Action liefern
                console.log(error);
                $('#PalettenUploadResult').html(xhr.statusText);
            }
        });
    });


    //Lieferanten löschen

    $('#DeleteLieferantenButton').click(function (e) {

        // angehakte Checkboxen sammeln
        var checkedLieferantenInputCheckboxes = $("#LieferantenGrid td input[type=checkbox]:checked");
        var lieferantenIds = [];
        if (checkedLieferantenInputCheckboxes.length > 0) {

            //IDs der zu löschenden Lieferanten aufsammeln
            checkedLieferantenInputCheckboxes.each(function () {
                var lieferantenId = parseInt($(this).attr("name"));
                lieferantenIds.push(lieferantenId);
            })



            $.ajax({
                type: "POST",
                url: "/Lieferanten/Delete",
                data: JSON.stringify({ lieferantenIds: lieferantenIds }),
                contentType: "application/json; charset=utf-8",
                traditional: true,
                success: function (response) {
                    // Zeilen entfernen
                    checkedLieferantenInputCheckboxes.each(function () {
                        var row = $(this).closest("tr");
                        if ($("#LieferantenGrid TBODY tr").length == 1) {
                            row.find("td").html("&nbsp;");
                            row.find("input").hide();
                        } else {
                            row.remove();
                        }
                    });
                },
                error: function (xhr, error, status) {
                    // Danke IIS fürs Verschlucken meines Statustextes; sollte produktiv die Meldung aus der Action liefern
                    $('#LieferantenDeleteResult').html(xhr.statusText);
                }
            });

        }
    });

    // Grid Stuff
    [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
        new MvcGrid(element);
    });
</script>
